package com.amao.Ademo_KP;

public class Test {
    public static void main(String[] args) {
        /**
         *  Model又叫实体类
         *
         *
         *
         *
         *  类的设计需求
         *      1.父类Person(抽象)
         *          父类Person抽取学生和老师类中相同的成员
         *              成员变量:
         *                  id(编号,自动生成)
         *                  name(姓名)
         *                  gender(性别)
         *                  birthday(生日)
         *                  age(年龄)
         *             构造方法:
         *                  无参+全参
         *             成员方法:
         *                  toString 模板设计模式
         *             抽象方法
         *                  getType() 由各子类去实现,返回各自的"职业"字符串
         *                  getWork() 由各子类去实现,返回各个的"工作内容"字符串
         *
         *     2.子类Student
         *           子类Student需要继承Person
         *              成员变量:
         *                  继承Person
         *              构造方法:
         *                  无参+全参(直接调用父类的全参 使用super)
         *              重写抽象方法:
         *                  重写getType() 返回"学生"
         *                  重写getWork() 返回"学习"
         *
         *      3.子类Teacher
         *           类Teacher需要继承Person
         *              成员变量:
         *                 继承Person
         *              构造方法:
         *                 无参+全参(直接调用父类的全参 使用super)
         *              重写抽象方法:
         *                 重写getType() 返回"老师"
         *                 重写getWork() 返回"教书"
         *
         * -------------------------------------------------------------------------------------
         *  工具类Utils类
         *          自定义的专门给我们自己项目使用的工具类
         *              1,静态变量:
         *                  学员的id值 (添加学员信息时,编号由此ID加1生成)
         *                  老师的id值 (添加学员信息时,编号由此ID加1生成)
         *              2.静态方法:
         *                  根据用户的出生日期计算年龄
         *                  打印一个Person对象的方法
         *                  打印一个ArrayList集合的方法
         *
         *--------------------------------------------------------------------------------------
         *  启动类
         *      就是main方法所在的类(mainApp)
         *
         *---------------------------------------------------------------------------------------
         *
         */
    }
}
